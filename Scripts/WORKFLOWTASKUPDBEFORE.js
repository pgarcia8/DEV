 /** * Accela Automation * $Id: WorkflowTaskUpdateAfter.js 106715 2008-09-26 06:23:12Z ACHIEVO\jack.su $ * * Accela, Inc. * Copyright (C): 2009 * * Description: * WorkflowTaskUpdateAfter.js the EMSE Script that related to EMSE EVENT WorkflowTaskUpdateAfter * * Notes: * * Revision History: * 2007-12-04     Vernon Crandall	Initial Version */function getCapId() {	var s_id1 = aa.env.getValue("PermitId1");	var s_id2 = aa.env.getValue("PermitId2");	var s_id3 = aa.env.getValue("PermitId3");	var s_capResult = aa.cap.getCapID(s_id1, s_id2, s_id3);	if (s_capResult.getSuccess())		return s_capResult.getOutput();	else {		aa.print("ERROR: Failed to get capId: " + s_capResult.getErrorMessage());		return null;	}}var task = aa.env.getValue("WorkflowTask"); var status = aa.env.getValue("WorkflowStatus");											var capId = getCapId();var cap = aa.cap.getCap(capId).getOutput(); var capDetailObj = aa.cap.getCapDetail(capId).getOutput(); var capIDString = capId.getCustomID();var appTypeResult = cap.getCapType(); var appTypeString = appTypeResult.toString(); var sysDate = aa.date.getCurrentDate();var	altID=capId.getCustomID();var currentUserID = aa.env.getValue("CurrentUserID");function getASIFieldNamesForTN(){	var tradeNameGroupCount=11;	var result=[];	var tradeNameSubgroup="TRADE NAME CHOICES";	var englishASIFieldPrefix="English Alternate "	var arabicASIFieldPrefix="Arabic Alternate "	for(var i=0;i<tradeNameGroupCount;++i){		var index=(i==0?'':String(i));		var isPrefered=(i==0?true:false);		var obj={			subgroup:			tradeNameSubgroup.toUpperCase(),			englishFieldName:	englishASIFieldPrefix.toUpperCase()+index,			arabicFieldName:	arabicASIFieldPrefix.toUpperCase()+index,			isPrefered:			isPrefered		};		if (isPrefered) {			 obj.englishFieldName = "English Prefered Name";			 obj.arabicFieldName = "Arabic Prefered Name";		}		result[i]=obj;	}	return result;};/** * Retrieve search data from CAP ASI fields *  * @return */var retrieveSearchDataFromASI=function(){	var tradeNameFieldList=getASIFieldNamesForTN();	var scriptResult=aa.appSpecificInfo.getByCapID(capId);	if(scriptResult.success){		var asiFields=scriptResult.getOutput();		for(var i=0;i<asiFields.length;++i){			var asiModel=asiFields[i];// AppSpecificInfoModel			var subgroup=asiModel.getCheckboxType().toUpperCase();			var fieldName=asiModel.getFieldLabel().toUpperCase();			var value=asiModel.getChecklistComment();			for(var k=0;k<tradeNameFieldList.length;++k){				var obj=tradeNameFieldList[k];				if(obj && obj.subgroup==subgroup){					if(obj.englishFieldName.toUpperCase()==fieldName.toUpperCase()){						obj.englishFieldValue=aa.specialSearch.getPureEnglishText(value).getOutput();						obj.originalEnglishTradeName=value;						break;					}else if(obj.arabicFieldName.toUpperCase()==fieldName.toUpperCase()){						obj.arabicFieldValue=aa.specialSearch.getPureArabicText(value).getOutput();						obj.originalArabicTradeName=value;						break;					}				}			}		}		return tradeNameFieldList;	}		return null;}function isEmpty(s1){	return s1==null || s1==undefined || s1=="";}function equals(s1,s2){	if(isEmpty(s1) && isEmpty(s2)){		return true;	}	if(!isEmpty(s1) && !isEmpty(s1)){		return String(s1)==String(s2);	}	return false;}function isFromASI(tradeName){	var asiTradeNames=retrieveSearchDataFromASI();	for(var i=0;i<asiTradeNames.length;++i){		var asiTradeName=asiTradeNames[i];		if(equals(tradeName.englishTradeName,asiTradeName.originalEnglishTradeName)				&& equals(tradeName.arabicTradeName,asiTradeName.originalArabicTradeName)		)		{			return true;		}	}	return false;}function editAppStatus(status) {	var cap = aa.cap.getCap(capId).getOutput().getCapModel(); 	cap.setCapStatus(status);	aa.cap.editCapByPK(cap);}function getApprovedTradeName(TSI) {		var englishTradeName=null;	var arabicTradeName=null;		if (TSI != "")	{	  for (a1 in TSI)		{		 if(TSI[a1].getCheckboxDesc()=='Approved Trade Name (English)'){			 englishTradeName=TSI[a1].getChecklistComment();		 	 continue;		 }		 if(TSI[a1].getCheckboxDesc()=='Approved Trade Name (Arabic)'){			arabicTradeName=TSI[a1].getChecklistComment();			continue;		 }		}			}			return{		englishTradeName:englishTradeName,		arabicTradeName:arabicTradeName	}}function doCheck(){	var wfTSI = aa.env.getValue("TaskSpecificInfoModels");	var tradeName=getApprovedTradeName(wfTSI);	if(tradeName.englishTradeName || tradeName.arabicTradeName){		if(!isFromASI(tradeName)){			aa.print("ERROR: The approved trade name doesn't match the choices as entered on the application.");			return false;		}		var scriptResult=aa.specialSearch.isTradeNameExist(tradeName.englishTradeName , tradeName.arabicTradeName);		var exists=(String(scriptResult.getOutput())=='true');		if(exists){			aa.print("ERROR: Trade Name already exists");			return false;		}	}	return true}var continueProcess=doCheck();if(continueProcess){	aa.env.setValue("ScriptReturnCode", "0");	}else{	aa.env.setValue("ScriptReturnCode", "-1");	aa.env.setValue("ScriptReturnMessage", "<font color=red><b>Action Cancelled</b></font><br><br>" );}