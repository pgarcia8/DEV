 var CapModel = aa.env.getValue("CapModel");var resultLabel;aa.print("");if (CapModel != null && CapModel.getContactsGroup() != null && CapModel.getContactsGroup().size() > 0){	var contacts = CapModel.getContactsGroup();	// check page data	resultLabel = checkPageData(contacts);	aa.print("resultLabel = "+ resultLabel);}printMessage(resultLabel);function printMessage(label){	if (label == undefined || label == null)	{		aa.env.setValue("ErrorCode", 0);	}	else	{		aa.env.setValue("ErrorCode", 2);		aa.env.setValue("ErrorMessage", "The SSN/FEIN you entered on this screen has also been used elsewhere on this form.");	}}function checkPageData(contacts){	if (contacts == null || contacts.size() <= 0)	{		return;	}		for (var k = 0; k < contacts.size()-1; k++)	{	    var contact = contacts.get(k);	    var ssn = contact.getPeople().getSocialSecurityNumber();	    var fein = contact.getPeople().getFein();	    var firstName = contact.getPeople().getFirstName();	    var lastName = contact.getPeople().getLastName();	    aa.print("ssn = " + ssn + "  fein = " + fein );	    for (var kk = k + 1; kk < contacts.size(); kk++)	    {			var ssn1 = contacts.get(kk).getPeople().getSocialSecurityNumber();			var fein1 = contacts.get(kk).getPeople().getFein();			var isDuplicateSSN = false;			var isDuplicateFEIN = false;			if (ssn1 != null)			{				isDuplicateSSN = ssn1.equals(ssn);			}			else if (ssn != null)			{				isDuplicateSSN = ssn.equals(ssn1);			}			if (fein1 != null)			{				isDuplicateFEIN = fein1.equals(fein);			}			else if (fein != null)			{				isDuplicateFEIN = fein.equals(fein1);			}			aa.print(ssn1 + " : " + isDuplicateSSN + "    " + fein1 + " : " + isDuplicateFEIN);			if (isDuplicateSSN || isDuplicateFEIN)			{				return "Duplicated";			}		}	}}