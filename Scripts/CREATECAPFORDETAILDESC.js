 //---Start of user can define the parameters below----------var grp = "AMS";var typ = "Street";var stype = "Light";var cat = "Relamp";var assigned_Dept ="FLAGSTAFF/BUILDING/BUILDING/NA/NA/NA/NA";var firstName ="Dave";var middleName="W";var lastName  ="Brewster";var date_Assigned ="04/11/2008";var priority ="2";var detailed_Description ="something";var short_Notes ="IvanChen";var reported_Type ="Emergency";var est_Prod_Units= "5";var actual_Prod_Units = "10";var date_Opened ="04/13/2008";var scheduled_Date ="04/02/2008";var reported_Date ="04/30/2008";var reported_Time ="01:00 AM";//------End of user defining------------------var formatPatternDate = "MM/dd/yyyy";var formatPatternTime = "hh:mm aa";var isProcess = "true";//Cap Modelvar capModelResult = null;var capModel;//Cap Type Modelvar capTypeModelResult = null;var capTypeModel;//CapID Modelvar capIDModelResult = null;var capIDModel;//CapDetail Modelvar capDetailModelResult = null;var capDetailModel;//CapWorkDes Modelvar capWorkDesModelResult = null;var capWorkDesModel;//Staff Modelvar capStaffModelResult = null;var capStaffModel;//get CapTypeModelcapTypeModelResult = aa.cap.getCapTypeModel();if(capTypeModelResult.getSuccess() == false){    aa.print("get cap model error:" + capTypeModelResult.getErrorMessage());    isProcess = "false";} else {    capTypeModel = capTypeModelResult.getOutput();    capTypeModel.setAuditStatus("A");    capTypeModel.setGroup(grp);    capTypeModel.setType(typ);    capTypeModel.setSubType(stype);    capTypeModel.setCategory(cat);}//contine creating if isProcess is trueif(isProcess != "false"){	//get CapDetailModel	capDetailModelResult = aa.cap.getCapDetailModel();	if(capDetailModelResult.getSuccess() == false)	{	    aa.print("get capDetail model error:" + capDetailModelResult.getErrorMessage());	    isProcess = "false";	} 	else	{		capDetailModel = capDetailModelResult.getOutput();		if( priority != null)		{			capDetailModel.setPriority(priority);		}		if( short_Notes != null)		{			capDetailModel.setShortNotes(short_Notes);		}		if( reported_Type != null)		{			capDetailModel.setReferenceType(reported_Type);		}				if(actual_Prod_Units != null)  		{			var actualProdUnitsResult = aa.cap.parseStr2Double(actual_Prod_Units);			if(actualProdUnitsResult.getSuccess() == false)			{				aa.print("Parse String to Double--<actualProdUnits> error:" + actualProdUnitsResult.getErrorMessage());				isProcess = "false";			} 			else 			{					var actualProdUnits = actualProdUnitsResult.getOutput();				capDetailModel.setActualProdUnits(actualProdUnits);			}		}		if(est_Prod_Units != null)		{			var est_Prod_UnitsResult = aa.cap.parseStr2Double(est_Prod_Units);			if(est_Prod_UnitsResult.getSuccess() == false)			{				aa.print("Parse String to Double--<est_Prod_Units> error:" + est_Prod_UnitsResult.getErrorMessage());				isProcess = "false";			}			else			{			       var estlProdUnits = est_Prod_UnitsResult.getOutput();			       capDetailModel.setEstProdUnits(estlProdUnits);			}		}				if((assigned_Dept != null) && (firstName!=null || middleName!=null || lastName!=null))  		{			capDetailModel.setAsgnDept(assigned_Dept);			if(firstName!=null || middleName!=null || lastName!=null)			{				//get Staff Model				capStaffModelResult = aa.cap.getStaffByUser(firstName, middleName, lastName, assigned_Dept);				if(capStaffModelResult.getSuccess() == false)				{					aa.print("get cap Staff Model error or assigned_Dept is invalid :" + capStaffModelResult.getErrorMessage());					isProcess = "false";				 				} 				else				{					capStaffModel = capStaffModelResult.getOutput();					if(capStaffModel != null)					{						capDetailModel.setAsgnStaff(capStaffModel.getUserID());					}				}			}		}		else if((assigned_Dept != null) || (firstName!=null || middleName!=null || lastName!=null))		{			aa.print("assigned_Dept is required if the UserInfo be filld, and UserInfo is required if the assigned_Dept be filld.");			isProcess = "false";		}			if(date_Assigned != null)		{			var asgnDateResult = aa.cap.parseStr2Date(date_Assigned, formatPatternDate);			if(asgnDateResult.getSuccess() == false)			{			   aa.print("Parse String to Date--<assign_Date> error:" + asgnDateResult.getErrorMessage());			   isProcess = "false";			}			else			{			   capDetailModel.setAsgnDate(asgnDateResult.getOutput());			}		}		if( scheduled_Date != null)		{			var scheduled_DateResult = aa.cap.parseStr2Date(scheduled_Date, formatPatternDate);			if(scheduled_DateResult.getSuccess() == false)			{			   aa.print("Parse String to Date--<scheduled_Date> error:" + scheduled_DateResult.getErrorMessage());			   isProcess = "false";			}			else			{			   capDetailModel.setScheduledDate(scheduled_DateResult.getOutput());			}		}				capDetailModel.setAuditStatus("A");			   	}	//get CapWorkDesModel	capWorkDesModelResult = aa.cap.getCapWorkDesModel();	if(capWorkDesModelResult.getSuccess() == false)	{		aa.print("get capWorkDes model error:" + capWorkDesModelResult.getErrorMessage());		isProcess = "false";	} 	else 	{		capWorkDesModel = capWorkDesModelResult.getOutput();		if(detailed_Description != null)		{		    capWorkDesModel.setDescription(detailed_Description);		    capWorkDesModel.setAuditStatus("A");		}	}	//get CapModel	capModelResult = aa.cap.getCapModel();	if(capModelResult.getSuccess() == false)	{	    aa.print("get cap model error:" + capModelResult.getErrorMessage());	    isProcess = "false";	} 	else 	{		capModel = capModelResult.getOutput();		if( date_Opened != null)  		{			var openedDateResult = aa.cap.parseStr2Date(date_Opened, formatPatternDate);			if(openedDateResult.getSuccess() == false)			{				aa.print("Parse String to Date--<date_Opened> error:" + openedDateResult.getErrorMessage());				isProcess = "false";			}			else			{				 var openedDate = openedDateResult.getOutput();				 capModel.setFileDate(openedDate);			}		}		if( reported_Date != null)  		{			var reportedDateResult = aa.cap.parseStr2Date(reported_Date, formatPatternDate);			if(reportedDateResult.getSuccess() == false)			{				aa.print("Parse String to Date--<reported_Date> error:" + reportedDateResult.getErrorMessage());				isProcess = "false";			}			else			{				var reportedDate = reportedDateResult.getOutput();				if(reported_Time != null)				{					var combinateDateResult = aa.cap.combineDateTime(reportedDate, reported_Time);					if(combinateDateResult.getSuccess() == false)					{						aa.print("Parse String to Date--<reported_Time> error:" + combinateDateResult.getErrorMessage());						isProcess = "false";					}					else					{						var combinateDate = combinateDateResult.getOutput();						capModel.setReportedDate(combinateDate);					}				}				else				{					capModel.setReportedDate(reportedDate);				}			}		}		else if( reported_Time != null)		{			aa.print("Parameter error: reported_Date is required if Report Time is not null");			isProcess = "false";		}		capModel.setCapType(capTypeModel);		capModel.setCapWorkDesModel(capWorkDesModel);		capModel.setCapDetailModel(capDetailModel);	}	var capScriptResult = aa.cap.getCapScriptModel(capModel);	var capScript;	if(capScriptResult.getSuccess())	{		capScript = capScriptResult.getOutput();	}	else	{		aa.print("get CapScriptModel fail : " + capScriptResult .getErrorMessage());		isProcess = "false";	}	if(isProcess == "true")	{		var appCreateResult = aa.cap.createAppWithModel(capScript);		if(appCreateResult.getSuccess())		{			aa.print("Create a CAP record successfully! CAP ID : " + appCreateResult.getOutput());		}		else		{			aa.print("It has occured some error when creating a CAP record, " + appCreateResult.getOutput());			aa.print(appCreateResult.getErrorMessage());		}	}	else	{		aa.print("Fail, paramater was not prepared!");	}}else{	aa.print("Fail, CapType is not exist! ");}