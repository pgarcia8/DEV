 aa.print("TimeAccountingUpdateBefore debug");var timeLogModel = aa.env.getValue("TimeLogModel");if timeLogModel != null{          aa.print("ServiceProviderCode="    + timeLogModel.getServProvCode());           aa.print("TimeLogSeq="             + timeLogModel.getTimeLogSeq());            aa.print("TimeGroupSeq="           + timeLogModel.getTimeGroupSeq());            aa.print("TimeTypeSeq="            + timeLogModel.getTimeTypeSeq());           aa.print("Reference="              + timeLogModel.getReference());  	aa.print("DateLogged="             + timeLogModel.getDateLogged());     aa.print("StartTime="              + timeLogModel.getStartTime()); 	aa.print("EndTime="                + timeLogModel.getEndTime()); 	aa.print("TimeElapsed="   + timeLogModel.getTimeElapsed().getHours()+ ":" + timeLogModel.getTimeElapsed().getMinutes());  	aa.print("TotalMinutes="           + timeLogModel.getTotalMinutes()); 	aa.print("Billable="               + timeLogModel.getBillable()); 	aa.print("Materials="              + timeLogModel.getMaterials()); 	aa.print("MaterialsCost="          + timeLogModel.getMaterialsCost()); 	aa.print("MileageStart="           + timeLogModel.getMileageStart()); 	aa.print("MileageEnd="             + timeLogModel.getMileageEnd()); 	aa.print("MilageTotal="            + timeLogModel.getMilageTotal());	aa.print("VehicleId="              + timeLogModel.getVehicleId());	aa.print("EntryRate="              + timeLogModel.getEntryRate()); 	aa.print("EntryPct="               + timeLogModel.getEntryPct()); 	aa.print("EntryCost="              + timeLogModel.getEntryCost()); 	aa.print("CreatedDate="            + timeLogModel.getCreatedDate()); 	aa.print("CreatedBy="              + timeLogModel.getCreatedBy()); 	aa.print("Notation="               + timeLogModel.getNotation()); 	aa.print("Recdate="                + timeLogModel.getLastChangeDate()); 	aa.print("RecFulUser="             + timeLogModel.getLastChangeUser()); }aa.env.setValue("ScriptReturnCode","0");aa.env.setValue("ScriptReturnMessage", "TimeAccountingUpdateBefore successful");