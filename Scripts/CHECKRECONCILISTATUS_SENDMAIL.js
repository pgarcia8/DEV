 /*** Check Reconciliation Status EMSE for Abu Dhabi.* 1. Invoke reconciliation Web Service to check reconciliation result.* 2. Send mail to notice adminstrator the result.**//**************** Setting constants *********************///UserName to connect to the WRRW web service system.var USERNAME = "economy1";//Password for authentication purpose.var PASSWORD = "dof123economy1";//WRRS web service Address.var WRRS_ENDPOINT = "https://wrrs.comtrust.ae/ftpwebservice/upload.asmx";//The transactions that how may days will be reconciliated.var CHECKING_INTERVAL_DAYS = aa.env.getValue("CheckIntervalDays");//The date for fail to run reconciliation job.var FAILED_JOB_DATE = aa.env.getValue("FailedJobDate");//From address of email.var FROM_ADDRESS_OF_MAIL = "Auto_Sender@Accela.com";//To address of email.var TO_ADDRESS_OF_MAIL = "david.wang@achievo.com";//CC address of email.var CC_ADDRESS_OF_MAIL = "david.wang@achievo.com";//The subject of email.var SUBJECT_OF_MAIL = "ACA_EMAIL_ETISALAT_PAYMENT_RECONCILIATION_RESULT_SUBJECT";//The content type of email template.var CONTENT_TYPE_OF_MAIL = "ACA_EMAIL_ETISALAT_PAYMENT_RECONCILIATION_RESULT_CONTENT";/**************** Initial Variables *********************/aa.reconciliationScript.setCheckInternalDays(CHECKING_INTERVAL_DAYS);aa.reconciliationScript.setJobDate(FAILED_JOB_DATE);var uploadLocator=aa.proxyInvoker.newInstance("com.accela.epayment.wsclient.ReconciliationClientImpl").getOutput();var successfulFileName = aa.reconciliationScript.getSuccessfulFileName();var servProvCode = aa.reconciliationScript.getServiceProviderCode();var checkReconciliationDate = aa.reconciliationScript.getJobDate();/**************** Execute Check Status Reconciliation *********************///1. Call WRRS Web Service to check reconciliation status.aa.log("Start to check reconciliation status.");uploadLocator.setWebServiceEndPoint(WRRS_ENDPOINT);var checkStatus = uploadLocator.checkFileStatus(successfulFileName,USERNAME,PASSWORD);aa.log("Reconciliation result:" + checkStatus);aa.log("Send reconciliation result to administrator.");//2. Send mail to administrator to report reconciliation status.checkStatus = "Check Online payment reconciliation status: " + checkStatus;var content = getEmailContent(servProvCode,CONTENT_TYPE_OF_MAIL,checkStatus);var subject = getEmailSubject(servProvCode,SUBJECT_OF_MAIL);var result = aa.reconciliationScript.sendMailwithAttachedFiles(			                  FROM_ADDRESS_OF_MAIL,			                  TO_ADDRESS_OF_MAIL,			                  CC_ADDRESS_OF_MAIL,			                  subject,			                  content,						      null,						      null);						      //3. Set environment variables and terminate EMSE job.		  if(result.getSuccess()){    aa.log("Success to send reconciliation mail.");    aa.env.setValue("ScriptReturnCode", "0");    aa.env.setValue("ScriptReturnMessage", "Success to send reconciliation mail.");}else{    aa.log("Fail to send reconciliation mail.");    aa.env.setValue("ScriptReturnCode", "-1");    aa.env.setValue("ScriptReturnMessage", "Fail to send reconciliation mail.");}/**************** Getting email template and generator email content. *********************///get email content for payment register successful,function getEmailContent(servProvCode,mailContentType,message){              var pamaremeters = aa.util.newHashtable();              addParameter(pamaremeters, "$$servProvCode$$", servProvCode);     addParameter(pamaremeters, "$$Date$$", checkReconciliationDate);     addParameter(pamaremeters, "$$FileName$$", successfulFileName);     addParameter(pamaremeters, "$$WRRS_URL$$", WRRS_ENDPOINT);     addParameter(pamaremeters, "$$processResult$$", message);     var emailContent = aa.util.newStringBuffer();     emailContent.append("<meta http-equiv=Content-Type content=text/html; charset=UTF-8>");                        var mailcontent = aa.util.getCustomContentByType(mailContentType, pamaremeters);     emailContent.append(mailcontent);              return emailContent.toString();}function getEmailSubject(servProvCode,mailContentType){     var pamaremeters = aa.util.newHashtable();     addParameter(pamaremeters, "$$servProvCode$$", servProvCode);     addParameter(pamaremeters, "$$Date$$", checkReconciliationDate);     var mailsubject = aa.util.getCustomContentByType(mailContentType, pamaremeters);     return mailsubject;}//add parameter to map.function addParameter(pamaremeters, key, value){     if(key != null)     {         if(value == null)         {             value = '';         }                            pamaremeters.put(key, value);     }}