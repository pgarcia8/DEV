 /** * Accela Automation * $Id: WorkflowTaskUpdateAfter.js 106715 2008-09-26 06:23:12Z ACHIEVO\jack.su $ * * Accela, Inc. * Copyright (C): 2009 * * Description: * WorkflowTaskUpdateAfter.js the EMSE Script that related to EMSE EVENT WorkflowTaskUpdateAfter * * Notes: * * Revision History: * 2007-12-04     Vernon Crandall	Initial Version */function getCapId() {	var s_id1 = aa.env.getValue("PermitId1");	var s_id2 = aa.env.getValue("PermitId2");	var s_id3 = aa.env.getValue("PermitId3");	var s_capResult = aa.cap.getCapID(s_id1, s_id2, s_id3);	if (s_capResult.getSuccess())		return s_capResult.getOutput();	else {		aa.print("ERROR: Failed to get capId: " + s_capResult.getErrorMessage());		return null;	}}var task = aa.env.getValue("WorkflowTask"); var status = aa.env.getValue("WorkflowStatus");											var capId = getCapId();var cap = aa.cap.getCap(capId).getOutput();var capType = cap.getCapType();var filterName=aa.cap.getCapTypeFilterName(capType).getOutput(); var capDetailObj = aa.cap.getCapDetail(capId).getOutput(); var capIDString = capId.getCustomID();var appTypeResult = cap.getCapType(); var appTypeString = appTypeResult.toString(); var sysDate = aa.date.getCurrentDate();var	altID=capId.getCustomID();var currentUserID = aa.env.getValue("CurrentUserID");function getApprovedTradeName(thisArr) {	var itemCap = capId;	var workflowResult = aa.workflow.getTasks(itemCap);	var wfObj = workflowResult.getOutput();	var fTask = wfObj[0];	var stepnumber = fTask.getStepNumber();	var processID = fTask.getProcessID();	var TSIResult = aa.taskSpecificInfo.getTaskSpecificInfoByTask(itemCap, processID, stepnumber)	var TSI = TSIResult.getOutput();		var englishTradeName=null;	var arabicTradeName=null;		for (a1 in TSI) {		if(TSI[a1].getCheckboxDesc()=='Approved Trade Name (English)'){			englishTradeName=TSI[a1].getChecklistComment();			continue;		}		if(TSI[a1].getCheckboxDesc()=='Approved Trade Name (Arabic)'){			arabicTradeName=TSI[a1].getChecklistComment();			continue;		}			}	return{		englishTradeName:englishTradeName,		arabicTradeName:arabicTradeName	}}function createReferenceLP(bizname1, bizname2) {	var newLic = aa.licenseScript.createLicenseScriptModel();	newLic.setBusinessName(bizname1);	newLic.setBusinessName2(bizname2); // available only on 6.6.1i patch i	newLic.setAgencyCode(aa.getServiceProviderCode());	newLic.setAuditDate(sysDate);	newLic.setAuditID(currentUserID);	newLic.setAuditStatus("A");	newLic.setLicenseType("TRADE NAME");	newLic.setLicState("LA");	newLic.setStateLicense(altID);//parseInt(Math.random(1)*80000000)	myResult = aa.licenseScript.createRefLicenseProf(newLic);	if (!myResult.getSuccess()) {		aa.print("**ERROR: can't create ref lic prof: " + myResult.getErrorMessage());		return;	}	lpsmResult = aa.licenseScript.getRefLicenseProfBySeqNbr(capId.getServiceProviderCode(),myResult.getOutput())	if (!lpsmResult.getSuccess()) {		aa.print("**WARNING error retrieving the LP just created "+ lpsmResult.getErrorMessage());		return;	}	lpsm = lpsmResult.getOutput();	// Now add the LP to the CAP	asCapResult = aa.licenseScript.associateLpWithCap(capId, lpsm)	if (!asCapResult.getSuccess()) {		aa.print("**WARNING error associating CAP to LP: "+ asCapResult.getErrorMessage())	} }function getASIFieldNamesForTN(){	var tradeNameGroupCount=11;	var result=[];	var tradeNameSubgroup="TRADE NAME CHOICES";	var englishASIFieldPrefix="English Alternate "	var arabicASIFieldPrefix="Arabic Alternate "	for(var i=0;i<tradeNameGroupCount;++i){		var index=(i==0?'':String(i));		var isPrefered=(i==0?true:false);		var obj={			subgroup:			tradeNameSubgroup.toUpperCase(),			englishFieldName:	englishASIFieldPrefix.toUpperCase()+index,			arabicFieldName:	arabicASIFieldPrefix.toUpperCase()+index,			isPrefered:			isPrefered		};		if (isPrefered) {			 obj.englishFieldName = "English Prefered Name";			 obj.arabicFieldName = "Arabic Prefered Name";		}		result[i]=obj;	}	return result;};/** * Retrieve search data from CAP ASI fields *  * @return */var retrieveSearchDataFromASI=function(){	var tradeNameFieldList=getASIFieldNamesForTN();	var scriptResult=aa.appSpecificInfo.getByCapID(capId);	if(scriptResult.success){		var asiFields=scriptResult.getOutput();		for(var i=0;i<asiFields.length;++i){			var asiModel=asiFields[i];// AppSpecificInfoModel			var subgroup=asiModel.getCheckboxType().toUpperCase();			var fieldName=asiModel.getFieldLabel().toUpperCase();			var value=asiModel.getChecklistComment();			for(var k=0;k<tradeNameFieldList.length;++k){				var obj=tradeNameFieldList[k];				if(obj && obj.subgroup==subgroup){					if(obj.englishFieldName.toUpperCase()==fieldName.toUpperCase()){						obj.englishFieldValue=aa.specialSearch.getPureEnglishText(value).getOutput();						obj.originalEnglishTradeName=value;						break;					}else if(obj.arabicFieldName.toUpperCase()==fieldName.toUpperCase()){						obj.arabicFieldValue=aa.specialSearch.getPureArabicText(value).getOutput();						obj.originalArabicTradeName=value;						break;					}				}			}		}		return tradeNameFieldList;	}		return null;}function isEmpty(s1){	return s1==null || s1==undefined || s1=="";}function equals(s1,s2){	if(isEmpty(s1) && isEmpty(s2)){		return true;	}	if(!isEmpty(s1) && !isEmpty(s1)){		return String(s1)==String(s2);	}	return false;}function isFromASI(tradeName){	var asiTradeNames=retrieveSearchDataFromASI();	for(var i=0;i<asiTradeNames.length;++i){		var asiTradeName=asiTradeNames[i];		if(equals(tradeName.englishTradeName,asiTradeName.originalEnglishTradeName)				&& equals(tradeName.arabicTradeName,asiTradeName.originalArabicTradeName)		)		{			return true;		}	}	return false;}function editAppStatus(status) {	var cap = aa.cap.getCap(capId).getOutput().getCapModel(); 	cap.setCapStatus(status);	aa.cap.editCapByPK(cap);}function composeSearchData(englishTradeName, arabicTradeName){	var searchDataModel = aa.specialSearch.newSearchDataModel().getOutput();	searchDataModel.setEntityType(filterName);	searchDataModel.setSearchGroupID(0);	searchDataModel.setEntityID(altID.toUpperCase());	searchDataModel.setAuditID(currentUserID);	searchDataModel.setCapID(capId);	searchDataModel.setServiceProviderCode(capId.getServiceProviderCode());				  searchDataModel.setOriginData1(englishTradeName);  searchDataModel.setOriginData2(arabicTradeName);	englishTradeName = aa.specialSearch.getPureEnglishText(englishTradeName).getOutput();	arabicTradeName = aa.specialSearch.getPureArabicText(arabicTradeName).getOutput();	searchDataModel.setSearchData1(englishTradeName);	searchDataModel.setSearchData2(arabicTradeName);	return searchDataModel;}function createSearchData(englishTradeName, arabicTradeName){		//remove and create generic search data.	var removeResult = aa.specialSearch.removeSearchDataByCapID(capId);		if (!removeResult.getSuccess())  {      aa.print("ERROR: Failed to remove generic search data : " + removeResult.getErrorMessage());      return false;	}		var searchDataModel = composeSearchData(englishTradeName, arabicTradeName);	var createResult = aa.specialSearch.createSearchData(searchDataModel);		if (!createResult.getSuccess())	{			 aa.print("ERROR: Failed to created generic search data : " + createResult.getErrorMessage());		 return false;	}			}function doSave(){	var tradeName=getApprovedTradeName();	if(tradeName.englishTradeName || tradeName.arabicTradeName){		if(!isFromASI(tradeName)){			aa.print("ERROR: The approved trade name doesn't match the choices as entered on the application.");			return "-1";		}		var scriptResult=aa.specialSearch.isTradeNameExist(tradeName.englishTradeName , tradeName.arabicTradeName);		if(!scriptResult.getSuccess()){			aa.print("ERROR: when execute isTradeNameExist");			return "-1";		}		if(String(scriptResult.getOutput())=='false'){			createReferenceLP(tradeName.englishTradeName, tradeName.arabicTradeName);			editAppStatus("Approved");			createSearchData(tradeName.englishTradeName, tradeName.arabicTradeName);		}else{			aa.print("ERROR: Trade Name already exists");			return "-1";		}	}	return "0"}var result=doSave();var message="";if(result=="0"){	message="WorkflowTaskUpdateAfter successful"}else{	message="WorkflowTaskUpdateAfter failed"}aa.env.setValue("ScriptReturnCode",result);aa.env.setValue("ScriptReturnMessage",message);